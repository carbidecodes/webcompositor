:root {
    --unit: 12px;
    --ease: cubic-bezier(.49,0,.37,.99);
    --rate: .25s;
}

body {
    font-family: monospace;
    font-size: calc(var(--unit)*1.6);
    margin: 0px;
    overflow: hidden;
    background-color: #000;
}

div#container {
    background-color: #f3f3f3;
}

div.toast {
    border-radius: var(--unit);
    padding: var(--unit);
    box-shadow: 1px 1px var(--unit) rgba(0,0,0,0.64);
    margin: var(--unit);
    margin-bottom: 0px;
    background-color: rgba(255,255,255,0.36);
    backdrop-filter: blur(8px);

    display: flex;
    position: relative;
    top: 0;
}

div.toast--body {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
}

div.layer {
    position: absolute;
    background-color: rgba(0,0,0,0);
}

div.toast img {
    margin-right: var(--unit);
    width: calc(var(--unit) * 4.0);
    height: calc(var(--unit) * 4.0);
    border-radius: calc(var(--unit) / 2);
    border: 1px solid rgba(0,0,0,0.01);
    box-shadow: 0px 0px calc(var(--unit) / 2) calc(var(--unit) / 4) rgba(255,255,255,0.08);
    box-sizing: border-box;
}

video {
    transition: filter .15s linear;
}

.blurred {
    filter: blur(16px);
}

.flex-column {
    display: flex;
    flex-direction: column;
    align-items: flex-start
}

.toast--out {
    animation: fadeout var(--rate) var(--ease);
}

.toast--in {
    animation: fadein var(--rate) var(--ease);
}

div.camera {
    --camera-size: 240px;

    display: flex;
    justify-content: center;
    align-content: center;

    position: absolute;
    top: 0;
    right: 0;

    overflow: hidden;
    width: var(--camera-size);
    height: var(--camera-size);

    border-radius: 50%;
    opacity: 99%;
    backdrop-filter: blur(12px);
    border: var(--unit) solid rgba(255,255,255,0.01);
    box-shadow: 0 0 12px 8px rgb(0 0 0 / 8%);
}

div.camera img {
    --zoom: 1.25;
    object-fit: cover;
    min-width: calc(var(--camera-size) * 16 * var(--zoom) / 9 );
    animation: 2s zoomIn;
    transition: --zoom 0.75s, filter .15s linear;
}

div.camera img.zoomed {
    --zoom: 1.8;
}

.expand {
    width: 100%;
    height: 100%;
}

@property --zoom {
    syntax: '<number>';
    initial-value: 1;
    inherits: false
}

@keyframes fadeout {
    to {
        opacity: 0;
    }

    from {
        opacity: 1.0;
    }
}

@keyframes fadein {
    from {
        opacity: 0;
    }

    to {
        opacity: 1.0;
    }
}
